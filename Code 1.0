import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.application.Application;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.layout.StackPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.stage.Stage;
import javafx.util.Duration;

public class TrafficSignalApp extends Application {

    private Circle redLight, yellowLight, greenLight;
    private Timeline timeline;
    private LightState currentState;

    private enum LightState {
        RED, RED_YELLOW, GREEN, YELLOW
    }

    @Override
    public void start(Stage primaryStage) {
        redLight = createLight(Color.RED);
        yellowLight = createLight(Color.YELLOW);
        greenLight = createLight(Color.GREEN);

        StackPane lightsPane = new StackPane();
        lightsPane.getChildren().addAll(redLight, yellowLight, greenLight);
        lightsPane.setAlignment(Pos.CENTER);

        Scene scene = new Scene(lightsPane, 200, 400);
        primaryStage.setTitle("Traffic Signal");
        primaryStage.setScene(scene);
        primaryStage.show();

        currentState = LightState.RED;
        initializeTimeline();
        timeline.play();
    }

    private Circle createLight(Color color) {
        Circle light = new Circle(50);
        light.setFill(Color.GRAY);
        light.setStroke(Color.BLACK);
        light.setStrokeWidth(2);
        light.setVisible(false);
        light.setManaged(false);
        light.setSmooth(true);
        light.setFill(color);
        return light;
    }

    private void initializeTimeline() {
        KeyFrame redFrame = new KeyFrame(Duration.seconds(5), event -> {
            redLight.setVisible(true);
            yellowLight.setVisible(false);
            greenLight.setVisible(false);
            currentState = LightState.RED_YELLOW;
        });

        KeyFrame redYellowFrame = new KeyFrame(Duration.seconds(1), event -> {
            redLight.setVisible(true);
            yellowLight.setVisible(true);
            greenLight.setVisible(false);
            currentState = LightState.GREEN;
        });

        KeyFrame greenFrame = new KeyFrame(Duration.seconds(5), event -> {
            redLight.setVisible(false);
            yellowLight.setVisible(false);
            greenLight.setVisible(true);
            currentState = LightState.YELLOW;
        });

        KeyFrame yellowFrame = new KeyFrame(Duration.seconds(1), event -> {
            redLight.setVisible(false);
            yellowLight.setVisible(true);
            greenLight.setVisible(false);
            currentState = LightState.RED;
        });

        timeline = new Timeline(redFrame, redYellowFrame, greenFrame, yellowFrame);
        timeline.setCycleCount(Timeline.INDEFINITE);
    }

    public static void main(String[] args) {
        launch(args);
    }
}
